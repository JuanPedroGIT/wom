// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(WomContext))]
    [Migration("20220302091711_InicialCreate")]
    partial class InicialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.2");

            modelBuilder.Entity("Core.Entities.Consumer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("IdConsumer");

                    b.Property<string>("AddressComplement")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Block")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Door")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Floor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdExternal")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("NewVSLogin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Province")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetName")
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.Property<string>("UtmCampaign")
                        .HasColumnType("TEXT");

                    b.Property<string>("UtmSource")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Consumers");
                });

            modelBuilder.Entity("Core.Entities.ConsumerProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("IdConsumerProgram");

                    b.Property<string>("ActivationCode")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("IdConsumer")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdConsumerProgramReference")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdGeneration")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdProgram")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSource")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdConsumer");

                    b.HasIndex("IdGeneration");

                    b.HasIndex("IdProgram");

                    b.HasIndex("IdSource");

                    b.HasIndex("IdStatus");

                    b.ToTable("ConsumerPrograms");
                });

            modelBuilder.Entity("Core.Entities.ConsumerProgramAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("IdConsumerProgramAnswer");

                    b.Property<string>("Answer")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("IdConsumerProgram")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdProgramQuestion")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdConsumerProgram");

                    b.HasIndex("IdProgramQuestion");

                    b.ToTable("ConsumerProgramAnswer");
                });

            modelBuilder.Entity("Core.Entities.ConsumerProgramPromotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("IdConsumerProgramPromotion");

                    b.Property<string>("Answer")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("IdConsumerProgram")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdProgramPromotion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdConsumerProgram");

                    b.HasIndex("IdProgramPromotion");

                    b.HasIndex("IdStatus");

                    b.ToTable("ConsumerProgramPromotions");
                });

            modelBuilder.Entity("Core.Entities.Generation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("IdGeneration");

                    b.Property<string>("GenerationName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Generations");
                });

            modelBuilder.Entity("Core.Entities.Program", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("IdProgram");

                    b.Property<string>("ProgramName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("Core.Entities.ProgramGenerationPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("IdProgramGenerationPeriod");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdGeneration")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdProgram")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MaximumReferencedConsumers")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TrafficSource")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdGeneration");

                    b.HasIndex("IdProgram");

                    b.ToTable("ProgramGenerationPeriods");
                });

            modelBuilder.Entity("Core.Entities.ProgramPromotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("IdProgramPromotion");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdProgram")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdProgram");

                    b.ToTable("ProgramPromotions");
                });

            modelBuilder.Entity("Core.Entities.ProgramQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("IdProgramQuestion");

                    b.Property<int>("IdProgram")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Question")
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdProgram");

                    b.ToTable("ProgramQuestions");
                });

            modelBuilder.Entity("Core.Entities.Source", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("IdSource");

                    b.Property<string>("SourceCripto")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Sources");
                });

            modelBuilder.Entity("Core.Entities.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("IdStatus");

                    b.Property<string>("StatusName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("Core.Entities.ConsumerProgram", b =>
                {
                    b.HasOne("Core.Entities.Consumer", "Consumer")
                        .WithMany()
                        .HasForeignKey("IdConsumer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Generation", "Generation")
                        .WithMany()
                        .HasForeignKey("IdGeneration")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Program", "Program")
                        .WithMany()
                        .HasForeignKey("IdProgram")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Source", "Source")
                        .WithMany()
                        .HasForeignKey("IdSource")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Status", "Status")
                        .WithMany()
                        .HasForeignKey("IdStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consumer");

                    b.Navigation("Generation");

                    b.Navigation("Program");

                    b.Navigation("Source");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Core.Entities.ConsumerProgramAnswer", b =>
                {
                    b.HasOne("Core.Entities.ConsumerProgram", "ConsumerProgram")
                        .WithMany()
                        .HasForeignKey("IdConsumerProgram")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.ProgramQuestion", "ProgramQuestion")
                        .WithMany()
                        .HasForeignKey("IdProgramQuestion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConsumerProgram");

                    b.Navigation("ProgramQuestion");
                });

            modelBuilder.Entity("Core.Entities.ConsumerProgramPromotion", b =>
                {
                    b.HasOne("Core.Entities.ConsumerProgram", "ConsumerProgram")
                        .WithMany()
                        .HasForeignKey("IdConsumerProgram")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.ProgramPromotion", "ProgramPromotion")
                        .WithMany()
                        .HasForeignKey("IdProgramPromotion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Status", "Status")
                        .WithMany()
                        .HasForeignKey("IdStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConsumerProgram");

                    b.Navigation("ProgramPromotion");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Core.Entities.ProgramGenerationPeriod", b =>
                {
                    b.HasOne("Core.Entities.Generation", "Generation")
                        .WithMany()
                        .HasForeignKey("IdGeneration")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Program", "Program")
                        .WithMany()
                        .HasForeignKey("IdProgram")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Generation");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("Core.Entities.ProgramPromotion", b =>
                {
                    b.HasOne("Core.Entities.Program", "Program")
                        .WithMany()
                        .HasForeignKey("IdProgram")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Program");
                });

            modelBuilder.Entity("Core.Entities.ProgramQuestion", b =>
                {
                    b.HasOne("Core.Entities.Program", "Program")
                        .WithMany("ProgramQuestions")
                        .HasForeignKey("IdProgram")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Program");
                });

            modelBuilder.Entity("Core.Entities.Program", b =>
                {
                    b.Navigation("ProgramQuestions");
                });
#pragma warning restore 612, 618
        }
    }
}
